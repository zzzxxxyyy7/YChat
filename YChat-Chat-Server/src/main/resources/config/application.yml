spring:
  profiles:
    # 运行环境
    active: test
  application:
    name: ychat
  datasource:
    url: jdbc:mysql://139.224.188.112:3306/ychat?useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true
    username: root
    password: zyj2021823
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-timeout: 10000
      validation-timeout: 3000
      idle-timeout: 60000
      login-timeout: 5
      max-lifetime: 60000
      maximum-pool-size: 10
      minimum-idle: 5
      read-only: false
  redis:
    # Redis服务器地址
    host: ${ychat.redis.host}
    # Redis服务器端口号
    port: ${ychat.redis.port}
    # 使用的数据库索引，默认是0
    database: 0
    # 连接超时时间
    timeout: 1800000
    # 设置密码
    password: ${ychat.redis.password}
  jackson:
    serialization:
      write-dates-as-timestamps: true
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
wx:
  mp:
    callback: ${ychat.wx.callback}
    configs:
      - appId: ${ychat.wx.appId} # 第一个公众号的 appid
        secret: ${ychat.wx.secret} # 公众号的 appsecret
        token: ${ychat.wx.token} # 接口配置里的 Token 值
        aesKey: ${ychat.wx.aesKey} # 接口配置里的 EncodingAESKey 值

rocketmq:
  name-server: ${rocketmq.name-server}
  # 默认的消息组
  producer:
    group: chatGroup
    send-message-timeout: 3000 # 发送消息超时时间，单位：毫秒。默认为 3000 。
    compress-message-body-threshold: 4096 # 消息压缩阀值，当消息体的大小超过该阀值后，进行消息压缩。默认为 4 * 1024B
    max-message-size: 4194304 # 消息体的最大允许大小。。默认为 4 * 1024 * 1024B
    retry-times-when-send-failed: 2 # 同步发送消息时，失败重试次数。默认为 2 次。
    retry-times-when-send-async-failed: 2 # 异步发送消息时，失败重试次数。默认为 2 次。
    retry-next-server: false # 发送消息给 Broker 时，如果发送失败，是否重试另外一台 Broker 。默认为 false
    access-key: ${rocketmq.access-key} # Access Key ，可阅读 https://github.com/apache/rocketmq/blob/master/docs/cn/acl/user_guide.md 文档
    secret-key: ${rocketmq.secret-key} # Secret Key
    enable-msg-trace: true # 是否开启消息轨迹功能。默认为 true 开启。可阅读 https://github.com/apache/rocketmq/blob/master/docs/cn/msg_trace/user_guide.md 文档
    customized-trace-topic: RMQ_SYS_TRACE_TOPIC # 自定义消息轨迹的 Topic 。默认为 RMQ_SYS_TRACE_TOPIC 。
  # Consumer 配置项
  consumer:
    access-key: ${rocketmq.access-key} # Access Key ，可阅读 https://github.com/apache/rocketmq/blob/master/docs/cn/acl/user_guide.md 文档
    secret-key: ${rocketmq.secret-key} # Secret Key
    listeners: # 配置某个消费分组，是否监听指定 Topic 。结构为 Map<消费者分组, <Topic, Boolean>> 。默认情况下，不配置表示监听。
      erbadagang-consumer-group:
        topic1: false # 关闭 test-consumer-group 对 topic1 的监听消费

jwt:
  secret: ${ychat.jwt.secret}

# mybatis-plus配置控制台打印完整带参数 SQL 语句
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:/mapper/*.xml

